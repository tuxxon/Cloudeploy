<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/schema/util http://www.springframework.org/schema/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<description>Spring common configurations</description>

	<context:component-scan base-package="cn.ac.iscas.cloudeploy.v2">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<util:properties id="configs" location="WEB-INF/classes/application.properties" />
	
	<!-- JPA entityManager -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="cn.ac.iscas.cloudeploy.v2.model.entity" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect"
				class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- 配置Spring data JPA 去实现DAO 类 -->
	<jpa:repositories base-package="cn.ac.iscas.cloudeploy.v2.model.dao"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager" />
		
	<!-- 使用annotation 定义事务 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- production环境 -->
	<context:annotation-config />
	<context:property-placeholder
			ignore-unresolvable="true" location="test.mongo.properties" />
	<context:component-scan base-package="cn.ac.iscas.cloudeploy.v2">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
    <!--MongoDB数据操作模板对象-->
    <beans profile="mongo">
			<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">  
				<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />  
			</bean>
			<!--MongoDB映射对象-->  
			<mongo:mongo id="mongos" host="${mongo.host}" port="${mongo.port}">
				<mongo:options   
						connections-per-host="${mongo.connectionsPerHost}"  
						threads-allowed-to-block-for-connection-multiplier="${mongo.threadsAllowedToBlockForConnectionMultiplier}"  
						connect-timeout="${mongo.connectTimeout}"  
						max-wait-time="${mongo.maxWaitTime}"  
						auto-connect-retry="${mongo.autoConnectRetry}"  
						socket-timeout="${mongo.socketTimeout}"/>   
			</mongo:mongo>  
				  
				  
			<!--MongoDB工厂-->  
			<mongo:db-factory dbname="${mongo.dbname}" mongo-ref="mongos"/>	
				
			<!--只在需要通过实现Spring Data 中Repositories及其子接口进行数据操作的情况下配置，Spring会自动为配置包路径下的接口创建代理实例-->  
			<mongo:repositories base-package="cn.ac.iscas.cloudeploy.v2.model.dao" mongo-template-ref="mongoTemplate"/>  
	</bean>
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath*:/application.properties" />

		<!-- 数据源配置，使用DBCP JDBC连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
	</beans>
</beans>